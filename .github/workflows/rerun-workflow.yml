name: Re-run Workflow

on:
  workflow_run:
    workflows:
      - CI
    types:
      - completed
  pull_request_target:
    types:
      - closed
      - labeled
      - unlabeled
  schedule:
    - cron: '30 */3 * * *' # every 3 hours (30 minutes past the hour)

permissions:
  contents: read

jobs:
  scheduled-retry:
    if: >
      startsWith(github.repository, 'Homebrew/') &&
      github.event_name == 'schedule'
    runs-on: ubuntu-latest
    steps:
      - name: Re-run CI workflow
        run: |
          PR_NUMBERS=$(gh pr list -l 'ci-retry' --json number --jq '.[].number')
          for PR_NUMBER in $PR_NUMBERS; do
            echo "Processing PR #$PR_NUMBER"
            WORKFLOW_RUN_ID=$(gh pr view $PR_NUMBER --json headRefName --jq '.headRefName' | xargs -I {} gh run list --sort --workflow=ci.yml --branch={} --json databaseId --jq '.[].databaseId')
            if [ ! -z "$WORKFLOW_RUN_ID" ]; then
              echo "Rerunning workflow run #$WORKFLOW_RUN_ID for PR #$PR_NUMBER"
              gh run rerun $WORKFLOW_RUN_ID
            else
              echo "No runs found for PR #$PR_NUMBER"
            fi
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  scheduled-retry-failed-jobs:
    if: >
      startsWith(github.repository, 'Homebrew/') &&
      github.event_name == 'schedule'
    runs-on: ubuntu-latest
    steps:
      - name: Re-run CI workflow
        run: |
          PR_NUMBERS=$(gh pr list -l 'ci-retry-failed-jobs' --json number --jq '.[].number')
          for PR_NUMBER in $PR_NUMBERS; do
            echo "Processing PR #$PR_NUMBER"
            WORKFLOW_RUN_ID=$(gh pr view $PR_NUMBER --json headRefName --jq '.headRefName' | xargs -I {} gh run list --sort --workflow=ci.yml --branch={} --json databaseId --jq '.[].databaseId')
            if [ ! -z "$WORKFLOW_RUN_ID" ]; then
              echo "Rerunning workflow run #$WORKFLOW_RUN_ID for PR #$PR_NUMBER"
              gh run rerun $WORKFLOW_RUN_ID --failed
            else
              echo "No runs found for PR #$PR_NUMBER"
            fi
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

